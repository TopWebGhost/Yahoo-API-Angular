"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chart_state_1 = require("./chart.state");
var index_1 = require("./index");
var initialState = new chart_state_1.ChartInitialState();
exports.chartReducer = function (state, _a) {
    if (state === void 0) { state = initialState; }
    var payload = _a.payload, type = _a.type;
    switch (type) {
        case index_1.ChartActions.CHANGE_POINT:
            return state.set(index_1.ChartStateKeys.Point, payload);
        case index_1.ChartActions.CHANGE_RANGE:
            return state.set(index_1.ChartStateKeys.Range, payload);
        case index_1.ChartActions.FETCH_FULFILLED:
            return state.set(index_1.ChartStateKeys.Data, payload);
        case index_1.ChartActions.FETCH_LOADER:
            return state.set(index_1.ChartStateKeys.Loader, payload);
        case index_1.ChartActions.FETCH_ERROR:
            return state.set(index_1.ChartStateKeys.Error, payload);
        default:
            return state;
    }
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC93YXRjaGxpc3QvY29udGVudC9jaGFydC9zdGF0ZS9jaGFydC5yZWR1Y2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBSUEsNkNBQWtEO0FBQ2xELGlDQUlpQjtBQUVqQixJQUFNLFlBQVksR0FBdUIsSUFBSSwrQkFBaUIsRUFBeUIsQ0FBQztBQUUzRSxRQUFBLFlBQVksR0FDdkIsVUFBQyxLQUF3QyxFQUFFLEVBQXVCO0lBQWpFLHNCQUFBLEVBQUEsb0JBQXdDO1FBQUcsb0JBQU8sRUFBRSxjQUFJO0lBQ3ZELE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDYixLQUFLLG9CQUFZLENBQUMsWUFBWTtZQUM1QixNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxzQkFBYyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNsRCxLQUFLLG9CQUFZLENBQUMsWUFBWTtZQUM1QixNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxzQkFBYyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNsRCxLQUFLLG9CQUFZLENBQUMsZUFBZTtZQUMvQixNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxzQkFBYyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNqRCxLQUFLLG9CQUFZLENBQUMsWUFBWTtZQUM1QixNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxzQkFBYyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNuRCxLQUFLLG9CQUFZLENBQUMsV0FBVztZQUMzQixNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxzQkFBYyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNsRDtZQUNFLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDakIsQ0FBQztBQUNILENBQUMsQ0FBQyIsImZpbGUiOiJhcHAvd2F0Y2hsaXN0L2NvbnRlbnQvY2hhcnQvc3RhdGUvY2hhcnQucmVkdWNlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFjdGlvblJlZHVjZXIsXG4gIEFjdGlvblxufSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBDaGFydEluaXRpYWxTdGF0ZSB9IGZyb20gJy4vY2hhcnQuc3RhdGUnO1xuaW1wb3J0IHtcbiAgQ2hhcnRBY3Rpb25zLFxuICBDaGFydFN0YXRlS2V5cyxcbiAgQ2hhcnRTdGF0ZUludGVyZmFjZVxufSBmcm9tICcuL2luZGV4JztcblxuY29uc3QgaW5pdGlhbFN0YXRlOkNoYXJ0U3RhdGVJbnRlcmZhY2UgPSBuZXcgQ2hhcnRJbml0aWFsU3RhdGUoKSBhcyBDaGFydFN0YXRlSW50ZXJmYWNlO1xuXG5leHBvcnQgY29uc3QgY2hhcnRSZWR1Y2VyOkFjdGlvblJlZHVjZXI8Q2hhcnRTdGF0ZUludGVyZmFjZT4gPVxuICAoc3RhdGU6Q2hhcnRTdGF0ZUludGVyZmFjZSA9IGluaXRpYWxTdGF0ZSwge3BheWxvYWQsIHR5cGV9OiBBY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgQ2hhcnRBY3Rpb25zLkNIQU5HRV9QT0lOVDpcbiAgICAgICAgcmV0dXJuIHN0YXRlLnNldChDaGFydFN0YXRlS2V5cy5Qb2ludCwgcGF5bG9hZCk7XG4gICAgICBjYXNlIENoYXJ0QWN0aW9ucy5DSEFOR0VfUkFOR0U6XG4gICAgICAgIHJldHVybiBzdGF0ZS5zZXQoQ2hhcnRTdGF0ZUtleXMuUmFuZ2UsIHBheWxvYWQpO1xuICAgICAgY2FzZSBDaGFydEFjdGlvbnMuRkVUQ0hfRlVMRklMTEVEOlxuICAgICAgICByZXR1cm4gc3RhdGUuc2V0KENoYXJ0U3RhdGVLZXlzLkRhdGEsIHBheWxvYWQpO1xuICAgICAgY2FzZSBDaGFydEFjdGlvbnMuRkVUQ0hfTE9BREVSOlxuICAgICAgICByZXR1cm4gc3RhdGUuc2V0KENoYXJ0U3RhdGVLZXlzLkxvYWRlciwgcGF5bG9hZCk7XG4gICAgICBjYXNlIENoYXJ0QWN0aW9ucy5GRVRDSF9FUlJPUjpcbiAgICAgICAgcmV0dXJuIHN0YXRlLnNldChDaGFydFN0YXRlS2V5cy5FcnJvciwgcGF5bG9hZCk7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuICB9O1xuIl19
